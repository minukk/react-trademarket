{"ast":null,"code":"import { all, fork, put, call, takeLatest, throttle } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { ADD_PRODUCT_REQUEST, ADD_PRODUCT_SUCCESS, ADD_PRODUCT_FAILURE, REMOVE_PRODUCT_REQUEST, REMOVE_PRODUCT_SUCCESS, REMOVE_PRODUCT_FAILURE, LOAD_PRODUCTS_REQUEST, LOAD_PRODUCTS_SUCCESS, LOAD_PRODUCTS_FAILURE, UPLOAD_IMAGES_REQUEST, UPLOAD_IMAGES_SUCCESS, UPLOAD_IMAGES_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE, REMOVE_COMMENT_REQUEST, REMOVE_COMMENT_SUCCESS, REMOVE_COMMENT_FAILURE, ADD_RECOMMENT_REQUEST, ADD_RECOMMENT_SUCCESS, ADD_RECOMMENT_FAILURE, LIKE_PRODUCT_REQUEST, LIKE_PRODUCT_SUCCESS, LIKE_PRODUCT_FAILURE, UNLIKE_PRODUCT_REQUEST, UNLIKE_PRODUCT_SUCCESS, UNLIKE_PRODUCT_FAILURE, LOAD_PRODUCT_REQUEST, LOAD_PRODUCT_SUCCESS, LOAD_PRODUCT_FAILURE, LOAD_USER_PRODUCT_REQUEST, LOAD_USER_PRODUCT_SUCCESS, LOAD_USER_PRODUCT_FAILURE, LOAD_CATEGORY_REQUEST, LOAD_CATEGORY_SUCCESS, LOAD_CATEGORY_FAILURE } from '../reducers/product';\nimport { ADD_PRODUCT_TO_ME, REMOVE_PRODUCT_OF_ME } from '../reducers/user';\n\nfunction addProductAPI(data) {\n  // POST /product\n  return axios.post('/product', data);\n}\n\nfunction* addProduct(action) {\n  try {\n    const result = yield call(addProductAPI, action.data);\n    yield put({\n      type: ADD_PRODUCT_SUCCESS,\n      data: result.data\n    });\n    yield put({\n      type: ADD_PRODUCT_TO_ME,\n      data: result.data.id\n    });\n  } catch (error) {\n    yield put({\n      type: ADD_PRODUCT_FAILURE,\n      error: error.response.data\n    });\n  }\n}\n\nfunction removeProductAPI(data) {\n  // DELETE /product/productId\n  return axios.delete(`/product/${data}`);\n}\n\nfunction* removeProduct(action) {\n  try {\n    const result = yield call(removeProductAPI, action.data);\n    yield put({\n      type: REMOVE_PRODUCT_SUCCESS,\n      data: result.data\n    });\n    yield put({\n      type: REMOVE_PRODUCT_OF_ME,\n      data: action.data\n    });\n  } catch (error) {\n    yield put({\n      type: REMOVE_PRODUCT_FAILURE,\n      error: error.response.data\n    });\n  }\n}\n\nfunction loadProductsAPI(lastId) {\n  // GET /productc?lastId=lastId\n  return axios.get(`/products?lastId=${lastId || 0}`);\n}\n\nfunction* loadProducts(action) {\n  try {\n    const result = yield call(loadProductsAPI, action.lastId);\n    yield put({\n      type: LOAD_PRODUCTS_SUCCESS,\n      data: result.data\n    });\n  } catch (error) {\n    yield put({\n      type: LOAD_PRODUCTS_FAILURE,\n      error: error.response.data\n    });\n  }\n}\n\nfunction uploadImagesAPI(data) {\n  // POST /product/images\n  return axios.post('/product/images', data);\n}\n\nfunction* uploadImages(action) {\n  try {\n    const result = yield call(uploadImagesAPI, action.data);\n    yield put({\n      type: UPLOAD_IMAGES_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: UPLOAD_IMAGES_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction addCommentAPI(data) {\n  // POST /product/productId/comment\n  return axios.post(`/product/${data.productId}/comment`, data);\n}\n\nfunction* addComment(action) {\n  try {\n    const result = yield call(addCommentAPI, action.data);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction removeCommentAPI(data) {\n  // POST /product/comment\n  return axios.delete(`/product/comment/${data.id}`);\n}\n\nfunction* removeComment(action) {\n  // console.log(action.data);\n  // console.log(action.data.ProductId);\n  // console.log(action.data.id);\n  try {\n    const result = yield call(removeCommentAPI, action.data);\n    yield put({\n      type: REMOVE_COMMENT_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: REMOVE_COMMENT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction addRecommentAPI(data) {\n  // POST /product/1/recomment\n  return axios.post(`/product/${data.commentId}/recomment`, data);\n}\n\nfunction* addRecomment(action) {\n  try {\n    const result = yield call(addRecommentAPI, action.data);\n    yield put({\n      type: ADD_RECOMMENT_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.log(err);\n    yield put({\n      type: ADD_RECOMMENT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction likeProductAPI(data) {\n  // POST /productId/like\n  return axios.patch(`/product/${data}/like`, data);\n}\n\nfunction* likeProduct(action) {\n  try {\n    const result = yield call(likeProductAPI, action.data);\n    yield put({\n      type: LIKE_PRODUCT_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LIKE_PRODUCT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction unlikeProductAPI(data) {\n  // DELETE /productId/like\n  return axios.delete(`/product/${data}/like`);\n}\n\nfunction* unlikeProduct(action) {\n  try {\n    const result = yield call(unlikeProductAPI, action.data);\n    yield put({\n      type: UNLIKE_PRODUCT_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: UNLIKE_PRODUCT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction loadProductAPI(data) {\n  return axios.get(`/product/${data}`);\n}\n\nfunction* loadProduct(action) {\n  try {\n    const result = yield call(loadProductAPI, action.data);\n    yield put({\n      type: LOAD_PRODUCT_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_PRODUCT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction loadUserProductAPI(data, lastId) {\n  return axios.get(`/user/${data}/products?lastId=${lastId || 0}`);\n}\n\nfunction* loadUserProduct(action) {\n  try {\n    const result = yield call(loadUserProductAPI, action.data, action.lastId);\n    yield put({\n      type: LOAD_USER_PRODUCT_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_USER_PRODUCT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction loadCategoryAPI(data, lastId) {\n  console.log(data);\n  return axios.get(`/category/${encodeURIComponent(data)}?lastId=${lastId || 0}`);\n}\n\nfunction* loadCategory(action) {\n  try {\n    const result = yield call(loadCategoryAPI, action.data, action.lastId);\n    yield put({\n      type: LOAD_CATEGORY_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_CATEGORY_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchAddProduct() {\n  yield takeLatest(ADD_PRODUCT_REQUEST, addProduct);\n}\n\nfunction* watchRemoveProduct() {\n  yield takeLatest(REMOVE_PRODUCT_REQUEST, removeProduct);\n}\n\nfunction* watchLoadProducts() {\n  yield throttle(5000, LOAD_PRODUCTS_REQUEST, loadProducts);\n}\n\nfunction* watchUploadImages() {\n  yield takeLatest(UPLOAD_IMAGES_REQUEST, uploadImages);\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nfunction* watchRemoveComment() {\n  yield takeLatest(REMOVE_COMMENT_REQUEST, removeComment);\n}\n\nfunction* watchAddRecomment() {\n  yield takeLatest(ADD_RECOMMENT_REQUEST, addRecomment);\n}\n\nfunction* watchLikeProduct() {\n  yield takeLatest(LIKE_PRODUCT_REQUEST, likeProduct);\n}\n\nfunction* watchUnlikeProduct() {\n  yield takeLatest(UNLIKE_PRODUCT_REQUEST, unlikeProduct);\n}\n\nfunction* watchLoadProduct() {\n  yield takeLatest(LOAD_PRODUCT_REQUEST, loadProduct);\n}\n\nfunction* watchLoadUserProduct() {\n  yield takeLatest(LOAD_USER_PRODUCT_REQUEST, loadUserProduct);\n}\n\nfunction* watchLoadCategory() {\n  yield takeLatest(LOAD_CATEGORY_REQUEST, loadCategory);\n}\n\nexport default function* productSaga() {\n  yield all([fork(watchLoadProducts), fork(watchAddProduct), fork(watchRemoveProduct), fork(watchUploadImages), fork(watchAddComment), fork(watchRemoveComment), fork(watchAddRecomment), fork(watchLikeProduct), fork(watchUnlikeProduct), fork(watchLoadProduct), fork(watchLoadUserProduct), fork(watchLoadCategory)]);\n}","map":{"version":3,"sources":["/Users/minuk/Desktop/React-TradeMarket/front/sagas/product.js"],"names":["all","fork","put","call","takeLatest","throttle","axios","ADD_PRODUCT_REQUEST","ADD_PRODUCT_SUCCESS","ADD_PRODUCT_FAILURE","REMOVE_PRODUCT_REQUEST","REMOVE_PRODUCT_SUCCESS","REMOVE_PRODUCT_FAILURE","LOAD_PRODUCTS_REQUEST","LOAD_PRODUCTS_SUCCESS","LOAD_PRODUCTS_FAILURE","UPLOAD_IMAGES_REQUEST","UPLOAD_IMAGES_SUCCESS","UPLOAD_IMAGES_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","REMOVE_COMMENT_REQUEST","REMOVE_COMMENT_SUCCESS","REMOVE_COMMENT_FAILURE","ADD_RECOMMENT_REQUEST","ADD_RECOMMENT_SUCCESS","ADD_RECOMMENT_FAILURE","LIKE_PRODUCT_REQUEST","LIKE_PRODUCT_SUCCESS","LIKE_PRODUCT_FAILURE","UNLIKE_PRODUCT_REQUEST","UNLIKE_PRODUCT_SUCCESS","UNLIKE_PRODUCT_FAILURE","LOAD_PRODUCT_REQUEST","LOAD_PRODUCT_SUCCESS","LOAD_PRODUCT_FAILURE","LOAD_USER_PRODUCT_REQUEST","LOAD_USER_PRODUCT_SUCCESS","LOAD_USER_PRODUCT_FAILURE","LOAD_CATEGORY_REQUEST","LOAD_CATEGORY_SUCCESS","LOAD_CATEGORY_FAILURE","ADD_PRODUCT_TO_ME","REMOVE_PRODUCT_OF_ME","addProductAPI","data","post","addProduct","action","result","type","id","error","response","removeProductAPI","delete","removeProduct","loadProductsAPI","lastId","get","loadProducts","uploadImagesAPI","uploadImages","err","addCommentAPI","productId","addComment","removeCommentAPI","removeComment","addRecommentAPI","commentId","addRecomment","console","log","likeProductAPI","patch","likeProduct","unlikeProductAPI","unlikeProduct","loadProductAPI","loadProduct","loadUserProductAPI","loadUserProduct","loadCategoryAPI","encodeURIComponent","loadCategory","watchAddProduct","watchRemoveProduct","watchLoadProducts","watchUploadImages","watchAddComment","watchRemoveComment","watchAddRecomment","watchLikeProduct","watchUnlikeProduct","watchLoadProduct","watchLoadUserProduct","watchLoadCategory","productSaga"],"mappings":"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","sourcesContent":["import { all, fork, put, call, takeLatest, throttle } from 'redux-saga/effects';\nimport axios from 'axios';\n\nimport {\n  ADD_PRODUCT_REQUEST, ADD_PRODUCT_SUCCESS, ADD_PRODUCT_FAILURE,\n  REMOVE_PRODUCT_REQUEST, REMOVE_PRODUCT_SUCCESS, REMOVE_PRODUCT_FAILURE,\n  LOAD_PRODUCTS_REQUEST, LOAD_PRODUCTS_SUCCESS, LOAD_PRODUCTS_FAILURE,\n  UPLOAD_IMAGES_REQUEST, UPLOAD_IMAGES_SUCCESS, UPLOAD_IMAGES_FAILURE,\n  ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE,\n  REMOVE_COMMENT_REQUEST, REMOVE_COMMENT_SUCCESS, REMOVE_COMMENT_FAILURE,\n  ADD_RECOMMENT_REQUEST, ADD_RECOMMENT_SUCCESS, ADD_RECOMMENT_FAILURE,\n  LIKE_PRODUCT_REQUEST, LIKE_PRODUCT_SUCCESS, LIKE_PRODUCT_FAILURE,\n  UNLIKE_PRODUCT_REQUEST, UNLIKE_PRODUCT_SUCCESS, UNLIKE_PRODUCT_FAILURE,\n  LOAD_PRODUCT_REQUEST, LOAD_PRODUCT_SUCCESS, LOAD_PRODUCT_FAILURE,\n  LOAD_USER_PRODUCT_REQUEST, LOAD_USER_PRODUCT_SUCCESS, LOAD_USER_PRODUCT_FAILURE,\n  LOAD_CATEGORY_REQUEST, LOAD_CATEGORY_SUCCESS, LOAD_CATEGORY_FAILURE,\n} from '../reducers/product';\nimport { ADD_PRODUCT_TO_ME, REMOVE_PRODUCT_OF_ME } from '../reducers/user';\n\nfunction addProductAPI(data) { // POST /product\n  return axios.post('/product', data);\n}\nfunction* addProduct(action) {\n  try {\n    const result = yield call(addProductAPI, action.data);\n    yield put({\n      type: ADD_PRODUCT_SUCCESS,\n      data: result.data,\n    });\n    yield put({\n      type: ADD_PRODUCT_TO_ME,\n      data: result.data.id,\n    });\n  } catch (error) {\n    yield put({\n      type: ADD_PRODUCT_FAILURE,\n      error: error.response.data,\n    });\n  }\n}\n\nfunction removeProductAPI(data) { // DELETE /product/productId\n  return axios.delete(`/product/${data}`);\n}\nfunction* removeProduct(action) {\n  try {\n    const result = yield call(removeProductAPI, action.data);\n    yield put({\n      type: REMOVE_PRODUCT_SUCCESS,\n      data: result.data,\n    });\n    yield put({\n      type: REMOVE_PRODUCT_OF_ME,\n      data: action.data,\n    });\n  } catch (error) {\n    yield put({\n      type: REMOVE_PRODUCT_FAILURE,\n      error: error.response.data,\n    });\n  }\n}\n\nfunction loadProductsAPI(lastId) { // GET /productc?lastId=lastId\n  return axios.get(`/products?lastId=${lastId || 0}`);\n}\nfunction* loadProducts(action) {\n  try {\n    const result = yield call(loadProductsAPI, action.lastId);\n    yield put({\n      type: LOAD_PRODUCTS_SUCCESS,\n      data: result.data,\n    });\n  } catch (error) {\n    yield put({\n      type: LOAD_PRODUCTS_FAILURE,\n      error: error.response.data,\n    });\n  }\n}\n\nfunction uploadImagesAPI(data) { // POST /product/images\n  return axios.post('/product/images', data);\n}\nfunction* uploadImages(action) {\n  try {\n    const result = yield call(uploadImagesAPI, action.data);\n    yield put({\n      type: UPLOAD_IMAGES_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: UPLOAD_IMAGES_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction addCommentAPI(data) { // POST /product/productId/comment\n  return axios.post(`/product/${data.productId}/comment`, data);\n}\nfunction* addComment(action) {\n  try {\n    const result = yield call(addCommentAPI, action.data);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction removeCommentAPI(data) { // POST /product/comment\n  return axios.delete(`/product/comment/${data.id}`);\n}\nfunction* removeComment(action) {\n  // console.log(action.data);\n  // console.log(action.data.ProductId);\n  // console.log(action.data.id);\n  try {\n    const result = yield call(removeCommentAPI, action.data);\n    yield put({\n      type: REMOVE_COMMENT_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: REMOVE_COMMENT_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction addRecommentAPI(data) { // POST /product/1/recomment\n  return axios.post(`/product/${data.commentId}/recomment`, data);\n}\nfunction* addRecomment(action) {\n  try {\n    const result = yield call(addRecommentAPI, action.data);\n    yield put({\n      type: ADD_RECOMMENT_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    console.log(err);\n    yield put({\n      type: ADD_RECOMMENT_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction likeProductAPI(data) { // POST /productId/like\n  return axios.patch(`/product/${data}/like`, data);\n}\nfunction* likeProduct(action) {\n  try {\n    const result = yield call(likeProductAPI, action.data);\n    yield put({\n      type: LIKE_PRODUCT_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: LIKE_PRODUCT_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction unlikeProductAPI(data) { // DELETE /productId/like\n  return axios.delete(`/product/${data}/like`);\n}\nfunction* unlikeProduct(action) {\n  try {\n    const result = yield call(unlikeProductAPI, action.data);\n    yield put({\n      type: UNLIKE_PRODUCT_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: UNLIKE_PRODUCT_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction loadProductAPI(data) {\n  return axios.get(`/product/${data}`);\n}\nfunction* loadProduct(action) {\n  try {\n    const result = yield call(loadProductAPI, action.data);\n    yield put({\n      type: LOAD_PRODUCT_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_PRODUCT_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction loadUserProductAPI(data, lastId) {\n  return axios.get(`/user/${data}/products?lastId=${lastId || 0}`);\n}\nfunction* loadUserProduct(action) {\n  try {\n    const result = yield call(loadUserProductAPI, action.data, action.lastId);\n    yield put({\n      type: LOAD_USER_PRODUCT_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_USER_PRODUCT_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction loadCategoryAPI(data, lastId) {\n  console.log(data);\n  return axios.get(`/category/${encodeURIComponent(data)}?lastId=${lastId || 0}`);\n}\nfunction* loadCategory(action) {\n  try {\n    const result = yield call(loadCategoryAPI, action.data, action.lastId);\n    yield put({\n      type: LOAD_CATEGORY_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_CATEGORY_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction* watchAddProduct() {\n  yield takeLatest(ADD_PRODUCT_REQUEST, addProduct);\n}\nfunction* watchRemoveProduct() {\n  yield takeLatest(REMOVE_PRODUCT_REQUEST, removeProduct);\n}\nfunction* watchLoadProducts() {\n  yield throttle(5000, LOAD_PRODUCTS_REQUEST, loadProducts);\n}\nfunction* watchUploadImages() {\n  yield takeLatest(UPLOAD_IMAGES_REQUEST, uploadImages);\n}\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\nfunction* watchRemoveComment() {\n  yield takeLatest(REMOVE_COMMENT_REQUEST, removeComment);\n}\nfunction* watchAddRecomment() {\n  yield takeLatest(ADD_RECOMMENT_REQUEST, addRecomment);\n}\nfunction* watchLikeProduct() {\n  yield takeLatest(LIKE_PRODUCT_REQUEST, likeProduct);\n}\nfunction* watchUnlikeProduct() {\n  yield takeLatest(UNLIKE_PRODUCT_REQUEST, unlikeProduct);\n}\nfunction* watchLoadProduct() {\n  yield takeLatest(LOAD_PRODUCT_REQUEST, loadProduct);\n}\nfunction* watchLoadUserProduct() {\n  yield takeLatest(LOAD_USER_PRODUCT_REQUEST, loadUserProduct);\n}\nfunction* watchLoadCategory() {\n  yield takeLatest(LOAD_CATEGORY_REQUEST, loadCategory);\n}\n\nexport default function* productSaga() {\n  yield all([\n    fork(watchLoadProducts),\n    fork(watchAddProduct),\n    fork(watchRemoveProduct),\n    fork(watchUploadImages),\n    fork(watchAddComment),\n    fork(watchRemoveComment),\n    fork(watchAddRecomment),\n    fork(watchLikeProduct),\n    fork(watchUnlikeProduct),\n    fork(watchLoadProduct),\n    fork(watchLoadUserProduct),\n    fork(watchLoadCategory),\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}