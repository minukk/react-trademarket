{"ast":null,"code":"var _jsxFileName = \"/Users/minuk/Desktop/React-TradeMarket/front/components/Comment.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Link from 'next/link';\nimport { List, Comment, Avatar, Button } from 'antd';\nimport PropTypes from 'prop-types';\nimport Recomment from './Recomment';\nimport { REMOVE_COMMENT_REQUEST } from '../reducers/product';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar Comments = function Comments(_ref) {\n  _s();\n\n  var comment = _ref.comment;\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector.me;\n\n  var id = me && me.id;\n  var dispatch = useDispatch();\n  var onRemoveComment = useCallback(function () {\n    if (!id) {\n      return alert('로그인이 필요합니다.');\n    }\n\n    return dispatch({\n      type: REMOVE_COMMENT_REQUEST,\n      data: comment.id\n    });\n  }, [id]);\n  return /*#__PURE__*/_jsxDEV(List, {\n    style: {\n      width: 400\n    },\n    header: \"\".concat(comment.length, \"\\uAC1C\\uC758 \\uB313\\uAE00\"),\n    itemLayout: \"horizontal\",\n    dataSource: comment,\n    renderItem: function renderItem(item) {\n      return /*#__PURE__*/_jsxDEV(List.Item, {\n        children: /*#__PURE__*/_jsxDEV(Comment, {\n          author: item.User.nickname,\n          avatar: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              href: \"/user/\".concat(item.User.id),\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                children: /*#__PURE__*/_jsxDEV(Avatar, {\n                  children: item.User.nickname[0]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 35,\n                  columnNumber: 22\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 19\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 17\n            }, _this), id ? /*#__PURE__*/_jsxDEV(Button, {\n              danger: \"true\",\n              onClick: onRemoveComment,\n              children: \"\\uC0AD\\uC81C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 23\n            }, _this) : '', /*#__PURE__*/_jsxDEV(Recomment, {\n              comment: item\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 17\n            }, _this)]\n          }, void 0, true),\n          content: item.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, _this)\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, _this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Comments, \"yAATjyoFQBqZ/uggDju1173HspM=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Comments;\nComments.propTypes = {\n  comment: PropTypes.arrayOf(PropTypes.object).isRequired\n};\nexport default Comments;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"sources":["/Users/minuk/Desktop/React-TradeMarket/front/components/Comment.js"],"names":["React","useCallback","useDispatch","useSelector","Link","List","Comment","Avatar","Button","PropTypes","Recomment","REMOVE_COMMENT_REQUEST","Comments","comment","state","user","me","id","dispatch","onRemoveComment","alert","type","data","width","length","item","User","nickname","content","propTypes","arrayOf","object","isRequired"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,IAAT,EAAeC,OAAf,EAAwBC,MAAxB,EAAgCC,MAAhC,QAA8C,MAA9C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,sBAAT,QAAuC,qBAAvC;;;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAAiB;AAAA;;AAAA,MAAdC,OAAc,QAAdA,OAAc;;AAAA,qBACjBV,WAAW,CAAC,UAACW,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAjB;AAAA,GAAD,CADM;AAAA,MACxBC,EADwB,gBACxBA,EADwB;;AAEhC,MAAMC,EAAE,GAAGD,EAAE,IAAIA,EAAE,CAACC,EAApB;AACA,MAAMC,QAAQ,GAAGhB,WAAW,EAA5B;AACA,MAAMiB,eAAe,GAAGlB,WAAW,CAAC,YAAM;AACxC,QAAI,CAACgB,EAAL,EAAS;AACP,aAAOG,KAAK,CAAC,aAAD,CAAZ;AACD;;AACD,WAAOF,QAAQ,CAAC;AACdG,MAAAA,IAAI,EAAEV,sBADQ;AAEdW,MAAAA,IAAI,EAAET,OAAO,CAACI;AAFA,KAAD,CAAf;AAID,GARkC,EAQhC,CAACA,EAAD,CARgC,CAAnC;AASA,sBACE,QAAC,IAAD;AACE,IAAA,KAAK,EAAE;AAAEM,MAAAA,KAAK,EAAE;AAAT,KADT;AAEE,IAAA,MAAM,YAAKV,OAAO,CAACW,MAAb,8BAFR;AAGE,IAAA,UAAU,EAAC,YAHb;AAIE,IAAA,UAAU,EAAEX,OAJd;AAKE,IAAA,UAAU,EAAE,oBAACY,IAAD;AAAA,0BACV,QAAC,IAAD,CAAM,IAAN;AAAA,+BACE,QAAC,OAAD;AACE,UAAA,MAAM,EAAEA,IAAI,CAACC,IAAL,CAAUC,QADpB;AAEE,UAAA,MAAM,eACJ;AAAA,oCACE,QAAC,IAAD;AAAM,cAAA,IAAI,kBAAWF,IAAI,CAACC,IAAL,CAAUT,EAArB,CAAV;AAAA,qCACE;AAAA,uCAAG,QAAC,MAAD;AAAA,4BAASQ,IAAI,CAACC,IAAL,CAAUC,QAAV,CAAmB,CAAnB;AAAT;AAAA;AAAA;AAAA;AAAA;AAAH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,qBADF,EAIGV,EAAE,gBAAG,QAAC,MAAD;AAAQ,cAAA,MAAM,EAAC,MAAf;AAAsB,cAAA,OAAO,EAAEE,eAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAH,GAAiE,EAJtE,eAKE,QAAC,SAAD;AAAW,cAAA,OAAO,EAAEM;AAApB;AAAA;AAAA;AAAA;AAAA,qBALF;AAAA,0BAHJ;AAWE,UAAA,OAAO,EAAEA,IAAI,CAACG;AAXhB;AAAA;AAAA;AAAA;AAAA;AADF,SAAgBH,IAAI,CAACR,EAArB;AAAA;AAAA;AAAA;AAAA,eADU;AAAA;AALd;AAAA;AAAA;AAAA;AAAA,WADF;AAyBD,CAtCD;;GAAML,Q;UACWT,W,EAEED,W;;;KAHbU,Q;AAwCNA,QAAQ,CAACiB,SAAT,GAAqB;AACnBhB,EAAAA,OAAO,EAAEJ,SAAS,CAACqB,OAAV,CAAkBrB,SAAS,CAACsB,MAA5B,EAAoCC;AAD1B,CAArB;AAIA,eAAepB,QAAf","sourcesContent":["import React, { useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Link from 'next/link';\nimport { List, Comment, Avatar, Button } from 'antd';\nimport PropTypes from 'prop-types';\nimport Recomment from './Recomment';\nimport { REMOVE_COMMENT_REQUEST } from '../reducers/product';\n\nconst Comments = ({ comment }) => {\n  const { me } = useSelector((state) => state.user);\n  const id = me && me.id;\n  const dispatch = useDispatch();\n  const onRemoveComment = useCallback(() => {\n    if (!id) {\n      return alert('로그인이 필요합니다.');\n    }\n    return dispatch({\n      type: REMOVE_COMMENT_REQUEST,\n      data: comment.id,\n    });\n  }, [id]);\n  return (\n    <List\n      style={{ width: 400 }}\n      header={`${comment.length}개의 댓글`}\n      itemLayout=\"horizontal\"\n      dataSource={comment}\n      renderItem={(item) => (\n        <List.Item key={item.id}>\n          <Comment\n            author={item.User.nickname}\n            avatar={(\n              <>\n                <Link href={`/user/${item.User.id}`}>\n                  <a><Avatar>{item.User.nickname[0]}</Avatar></a>\n                </Link>\n                {id ? <Button danger=\"true\" onClick={onRemoveComment}>삭제</Button> : ''}\n                <Recomment comment={item} />\n              </>\n            )}\n            content={item.content}\n          />\n        </List.Item>\n      )}\n    />\n  );\n};\n\nComments.propTypes = {\n  comment: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default Comments;\n"]},"metadata":{},"sourceType":"module"}