{"ast":null,"code":"var _jsxFileName = \"/Users/minuk/Desktop/React-TradeMarket/front/components/Comment.js\";\nimport React, { useReducer } from 'react';\nimport { useSelector } from 'react-redux';\nimport Link from 'next/link';\nimport { List, Comment, Avatar, Button } from 'antd';\nimport PropTypes from 'prop-types';\nimport Recomment from './Recomment';\nimport reducer, { initialState, REMOVE_COMMENT_REQUEST } from '../reducers/product';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Comments = ({\n  comment\n}) => {\n  const id = useSelector(state => {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  const {\n    0: state,\n    1: dispatch\n  } = useReducer(reducer, initialState);\n  return /*#__PURE__*/_jsxDEV(List, {\n    style: {\n      width: 400\n    },\n    header: `${comment.length}개의 댓글`,\n    itemLayout: \"horizontal\",\n    dataSource: comment,\n    renderItem: item => /*#__PURE__*/_jsxDEV(List.Item, {\n      children: /*#__PURE__*/_jsxDEV(Comment, {\n        author: item.User.nickname,\n        avatar: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            href: `/user/${item.User.id}`,\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              children: /*#__PURE__*/_jsxDEV(Avatar, {\n                children: item.User.nickname[0]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 26,\n                columnNumber: 22\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 17\n          }, this), id && item.User.id === id ? /*#__PURE__*/_jsxDEV(Button, {\n            danger: \"true\",\n            onClick: () => dispatch({\n              type: REMOVE_COMMENT_REQUEST,\n              data: item.id\n            }),\n            children: \"\\uC0AD\\uC81C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 21\n          }, this) : '', /*#__PURE__*/_jsxDEV(Recomment, {\n            comment: item\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true),\n        content: item.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this)\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n\nComments.propTypes = {\n  comment: PropTypes.arrayOf(PropTypes.object).isRequired\n};\nexport default Comments;","map":{"version":3,"sources":["/Users/minuk/Desktop/React-TradeMarket/front/components/Comment.js"],"names":["React","useReducer","useSelector","Link","List","Comment","Avatar","Button","PropTypes","Recomment","reducer","initialState","REMOVE_COMMENT_REQUEST","Comments","comment","id","state","user","me","dispatch","width","length","item","User","nickname","type","data","content","propTypes","arrayOf","object","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,IAAT,EAAeC,OAAf,EAAwBC,MAAxB,EAAgCC,MAAhC,QAA8C,MAA9C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,OAAP,IAAkBC,YAAlB,EAAgCC,sBAAhC,QAA8D,qBAA9D;;;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAChC,QAAMC,EAAE,GAAGb,WAAW,CAAEc,KAAD;AAAA;;AAAA,6BAAWA,KAAK,CAACC,IAAN,CAAWC,EAAtB,mDAAW,eAAeH,EAA1B;AAAA,GAAD,CAAtB;AACA,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQG;AAAR,MAAoBlB,UAAU,CAACS,OAAD,EAAUC,YAAV,CAApC;AAEA,sBACE,QAAC,IAAD;AACE,IAAA,KAAK,EAAE;AAAES,MAAAA,KAAK,EAAE;AAAT,KADT;AAEE,IAAA,MAAM,EAAG,GAAEN,OAAO,CAACO,MAAO,OAF5B;AAGE,IAAA,UAAU,EAAC,YAHb;AAIE,IAAA,UAAU,EAAEP,OAJd;AAKE,IAAA,UAAU,EAAGQ,IAAD,iBACV,QAAC,IAAD,CAAM,IAAN;AAAA,6BACE,QAAC,OAAD;AACE,QAAA,MAAM,EAAEA,IAAI,CAACC,IAAL,CAAUC,QADpB;AAEE,QAAA,MAAM,eACJ;AAAA,kCACE,QAAC,IAAD;AAAM,YAAA,IAAI,EAAG,SAAQF,IAAI,CAACC,IAAL,CAAUR,EAAG,EAAlC;AAAA,mCACE;AAAA,qCAAG,QAAC,MAAD;AAAA,0BAASO,IAAI,CAACC,IAAL,CAAUC,QAAV,CAAmB,CAAnB;AAAT;AAAA;AAAA;AAAA;AAAA;AAAH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,EAIGT,EAAE,IAAIO,IAAI,CAACC,IAAL,CAAUR,EAAV,KAAiBA,EAAvB,gBAEG,QAAC,MAAD;AACE,YAAA,MAAM,EAAC,MADT;AAEE,YAAA,OAAO,EAAE,MAAMI,QAAQ,CAAC;AACtBM,cAAAA,IAAI,EAAEb,sBADgB;AAEtBc,cAAAA,IAAI,EAAEJ,IAAI,CAACP;AAFW,aAAD,CAFzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFH,GAWK,EAfR,eAgBE,QAAC,SAAD;AAAW,YAAA,OAAO,EAAEO;AAApB;AAAA;AAAA;AAAA;AAAA,kBAhBF;AAAA,wBAHJ;AAsBE,QAAA,OAAO,EAAEA,IAAI,CAACK;AAtBhB;AAAA;AAAA;AAAA;AAAA;AADF,OAAgBL,IAAI,CAACP,EAArB;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA,UADF;AAoCD,CAxCD;;AA0CAF,QAAQ,CAACe,SAAT,GAAqB;AACnBd,EAAAA,OAAO,EAAEN,SAAS,CAACqB,OAAV,CAAkBrB,SAAS,CAACsB,MAA5B,EAAoCC;AAD1B,CAArB;AAIA,eAAelB,QAAf","sourcesContent":["import React, { useReducer } from 'react';\nimport { useSelector } from 'react-redux';\nimport Link from 'next/link';\nimport { List, Comment, Avatar, Button } from 'antd';\nimport PropTypes from 'prop-types';\nimport Recomment from './Recomment';\nimport reducer, { initialState, REMOVE_COMMENT_REQUEST } from '../reducers/product';\n\nconst Comments = ({ comment }) => {\n  const id = useSelector((state) => state.user.me?.id);\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  return (\n    <List\n      style={{ width: 400 }}\n      header={`${comment.length}개의 댓글`}\n      itemLayout=\"horizontal\"\n      dataSource={comment}\n      renderItem={(item) => (\n        <List.Item key={item.id}>\n          <Comment\n            author={item.User.nickname}\n            avatar={(\n              <>\n                <Link href={`/user/${item.User.id}`}>\n                  <a><Avatar>{item.User.nickname[0]}</Avatar></a>\n                </Link>\n                {id && item.User.id === id\n                  ? (\n                    <Button\n                      danger=\"true\"\n                      onClick={() => dispatch({\n                        type: REMOVE_COMMENT_REQUEST,\n                        data: item.id,\n                      })}\n                    >\n                      삭제\n                    </Button>\n                  ) : ''}\n                <Recomment comment={item} />\n              </>\n            )}\n            content={item.content}\n          />\n        </List.Item>\n      )}\n    />\n  );\n};\n\nComments.propTypes = {\n  comment: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default Comments;\n"]},"metadata":{},"sourceType":"module"}