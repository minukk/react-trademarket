{"ast":null,"code":"var _jsxFileName = \"/Users/minuk/Desktop/React-TradeMarket/front/pages/user/[id].js\";\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { END } from 'redux-saga';\nimport axios from 'axios';\nimport { useRouter } from 'next/router';\nimport { Avatar, Card } from 'antd';\nimport Head from 'next/head';\nimport AppLayout from '../../components/AppLayout';\nimport PostCard from '../../components/ProductCard';\nimport wrapper from '../../store/configStore';\nimport { LOAD_MY_INFO_REQUEST, LOAD_USER_REQUEST } from '../../reducers/user';\nimport { LOAD_USER_PRODUCT_REQUEST } from '../../reducers/product';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst User = () => {\n  const dispatch = useDispatch();\n  const router = useRouter();\n  const {\n    id\n  } = router.query;\n  const {\n    mainProducts,\n    hasMoreProducts,\n    loadProductsLoading\n  } = useSelector(state => state.product);\n  const {\n    userInfo\n  } = useSelector(state => state.user);\n  useEffect(() => {\n    function onScroll() {\n      if (window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\n        if (hasMoreProducts && !loadProductsLoading) {\n          dispatch({\n            type: LOAD_USER_PRODUCT_REQUEST,\n            lastId: mainProducts[mainProducts.length - 1] && mainProducts[mainProducts.length - 1].id,\n            data: id\n          });\n        }\n      }\n    }\n\n    window.addEventListener('scroll', onScroll);\n    return () => {\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, [hasMoreProducts, mainProducts, id, loadProductsLoading]);\n  return /*#__PURE__*/_jsxDEV(AppLayout, {\n    children: [userInfo && /*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: [userInfo.nickname, \"\\uB2D8\\uC758 \\uAE00\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: `${userInfo.nickname}님의 게시글`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        property: \"og:title\",\n        content: `${userInfo.nickname}님의 게시글`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        property: \"og:description\",\n        content: userInfo.nickname\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        property: \"og:image\",\n        content: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        property: \"og:url\",\n        content: `http://localhost:3000/user/${id}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), mainProducts.map(c => /*#__PURE__*/_jsxDEV(PostCard, {\n      post: c\n    }, c.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 32\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps(async context => {\n  const cookie = context.req ? context.req.headers.cookie : '';\n  axios.defaults.headers.Cookie = ''; // cookie 공유 문제 방지\n\n  if (context.req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n\n  context.store.dispatch({\n    type: LOAD_USER_PRODUCT_REQUEST,\n    data: context.params.id\n  });\n  context.store.dispatch({\n    type: LOAD_MY_INFO_REQUEST\n  });\n  context.store.dispatch({\n    type: LOAD_USER_REQUEST,\n    data: context.params.id\n  });\n  context.store.dispatch(END);\n  await context.store.sagaTask.toPromise();\n  console.log('getState', context.store.getState().product.mainProducts);\n  return {\n    props: {}\n  };\n});\nexport default User;","map":{"version":3,"sources":["/Users/minuk/Desktop/React-TradeMarket/front/pages/user/[id].js"],"names":["React","useEffect","useDispatch","useSelector","END","axios","useRouter","Avatar","Card","Head","AppLayout","PostCard","wrapper","LOAD_MY_INFO_REQUEST","LOAD_USER_REQUEST","LOAD_USER_PRODUCT_REQUEST","User","dispatch","router","id","query","mainProducts","hasMoreProducts","loadProductsLoading","state","product","userInfo","user","onScroll","window","scrollY","document","documentElement","clientHeight","scrollHeight","type","lastId","length","data","addEventListener","removeEventListener","nickname","map","c","getServerSideProps","context","cookie","req","headers","defaults","Cookie","store","params","sagaTask","toPromise","console","log","getState","props"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { END } from 'redux-saga';\nimport axios from 'axios';\nimport { useRouter } from 'next/router';\nimport { Avatar, Card } from 'antd';\nimport Head from 'next/head';\n\nimport AppLayout from '../../components/AppLayout';\nimport PostCard from '../../components/ProductCard';\nimport wrapper from '../../store/configStore';\nimport { LOAD_MY_INFO_REQUEST, LOAD_USER_REQUEST } from '../../reducers/user';\nimport { LOAD_USER_PRODUCT_REQUEST } from '../../reducers/product';\n\nconst User = () => {\n  const dispatch = useDispatch();\n  const router = useRouter();\n  const { id } = router.query;\n  const { mainProducts, hasMoreProducts, loadProductsLoading } = useSelector((state) => state.product);\n  const { userInfo } = useSelector((state) => state.user);\n\n  useEffect(() => {\n    function onScroll() {\n      if (window.scrollY + document.documentElement.clientHeight\n        > document.documentElement.scrollHeight - 300) {\n        if (hasMoreProducts && !loadProductsLoading) {\n          dispatch({\n            type: LOAD_USER_PRODUCT_REQUEST,\n            lastId: mainProducts[mainProducts.length - 1]\n            && mainProducts[mainProducts.length - 1].id,\n            data: id,\n          });\n        }\n      }\n    }\n    window.addEventListener('scroll', onScroll);\n    return () => {\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, [hasMoreProducts, mainProducts, id, loadProductsLoading]);\n\n  return (\n    <AppLayout>\n      {userInfo && (\n        <Head>\n          <title>\n            {userInfo.nickname}\n            님의 글\n          </title>\n          <meta name=\"description\" content={`${userInfo.nickname}님의 게시글`} />\n          <meta property=\"og:title\" content={`${userInfo.nickname}님의 게시글`} />\n          <meta property=\"og:description\" content={userInfo.nickname} />\n          <meta property=\"og:image\" content=\"\" />\n          <meta property=\"og:url\" content={`http://localhost:3000/user/${id}`} />\n        </Head>\n      )}\n      {mainProducts.map((c) => <PostCard key={c.id} post={c} />)}\n    </AppLayout>\n  );\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\n  const cookie = context.req ? context.req.headers.cookie : '';\n  axios.defaults.headers.Cookie = ''; // cookie 공유 문제 방지\n  if (context.req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n  context.store.dispatch({\n    type: LOAD_USER_PRODUCT_REQUEST,\n    data: context.params.id,\n  });\n  context.store.dispatch({\n    type: LOAD_MY_INFO_REQUEST,\n  });\n  context.store.dispatch({\n    type: LOAD_USER_REQUEST,\n    data: context.params.id,\n  });\n  context.store.dispatch(END);\n  await context.store.sagaTask.toPromise();\n  console.log('getState', context.store.getState().product.mainProducts);\n  return { props: {} };\n});\n\nexport default User;\n"]},"metadata":{},"sourceType":"module"}