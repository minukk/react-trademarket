{"ast":null,"code":"import { all, fork, put, call, takeLatest, throttle } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { ADD_PRODUCT_REQUEST, ADD_PRODUCT_SUCCESS, ADD_PRODUCT_FAILURE, REMOVE_PRODUCT_REQUEST, REMOVE_PRODUCT_SUCCESS, REMOVE_PRODUCT_FAILURE, LOAD_PRODUCTS_REQUEST, LOAD_PRODUCTS_SUCCESS, LOAD_PRODUCTS_FAILURE, UPLOAD_IMAGES_REQUEST, UPLOAD_IMAGES_SUCCESS, UPLOAD_IMAGES_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE, ADD_RECOMMENT_REQUEST, ADD_RECOMMENT_SUCCESS, ADD_RECOMMENT_FAILURE, LIKE_PRODUCT_REQUEST, LIKE_PRODUCT_SUCCESS, LIKE_PRODUCT_FAILURE, UNLIKE_PRODUCT_REQUEST, UNLIKE_PRODUCT_SUCCESS, UNLIKE_PRODUCT_FAILURE } from '../reducers/product';\nimport { ADD_PRODUCT_TO_ME, REMOVE_PRODUCT_OF_ME } from '../reducers/user';\n\nfunction addProductAPI(data) {\n  // POST /product\n  return axios.post('/product', data);\n}\n\nfunction* addProduct(action) {\n  try {\n    const result = yield call(addProductAPI, action.data);\n    yield put({\n      type: ADD_PRODUCT_SUCCESS,\n      data: result.data\n    });\n    yield put({\n      type: ADD_PRODUCT_TO_ME,\n      data: result.data.id\n    });\n  } catch (error) {\n    yield put({\n      type: ADD_PRODUCT_FAILURE,\n      error: error.response.data\n    });\n  }\n}\n\nfunction removeProductAPI(data) {\n  // DELETE /product/productId\n  return axios.delete(`/product/${data}`);\n}\n\nfunction* removeProduct(action) {\n  try {\n    const result = yield call(removeProductAPI, action.data);\n    yield put({\n      type: REMOVE_PRODUCT_SUCCESS,\n      data: result.data\n    });\n    yield put({\n      type: REMOVE_PRODUCT_OF_ME,\n      data: action.data\n    });\n  } catch (error) {\n    yield put({\n      type: REMOVE_PRODUCT_FAILURE,\n      error: error.response.data\n    });\n  }\n}\n\nfunction loadProductsAPI(lastId) {\n  // GET /productc?lastId=lastId\n  return axios.get(`/products?lastId=${lastId || 0}`);\n}\n\nfunction* loadProducts(action) {\n  try {\n    const result = yield call(loadProductsAPI, action.lastId);\n    yield put({\n      type: LOAD_PRODUCTS_SUCCESS,\n      data: result.data\n    });\n  } catch (error) {\n    yield put({\n      type: LOAD_PRODUCTS_FAILURE,\n      error: error.response.data\n    });\n  }\n}\n\nfunction uploadImagesAPI(data) {\n  // POST /product/images\n  return axios.post('/product/images', data);\n}\n\nfunction* uploadImages(action) {\n  try {\n    const result = yield call(uploadImagesAPI, action.data);\n    yield put({\n      type: UPLOAD_IMAGES_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: UPLOAD_IMAGES_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction addCommentAPI(data) {\n  // POST /product/productId/comment\n  return axios.post(`/product/${data.productId}/comment`, data);\n}\n\nfunction* addComment(action) {\n  try {\n    const result = yield call(addCommentAPI, action.data);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction addRecommentAPI(data) {\n  // POST /product/1/recomment\n  return axios.post(`/product/${data.commentId}/recomment`, data);\n}\n\nfunction* addRecomment(action) {\n  console.log(action.data);\n\n  try {\n    const result = yield call(addRecommentAPI, action.data);\n    yield put({\n      type: ADD_RECOMMENT_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_RECOMMENT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction likeProductAPI(data) {\n  // POST /productId/like\n  return axios.patch(`/product/${data}/like`, data);\n}\n\nfunction* likeProduct(action) {\n  try {\n    const result = yield call(likeProductAPI, action.data);\n    yield put({\n      type: LIKE_PRODUCT_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LIKE_PRODUCT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction unlikeProductAPI(data) {\n  // DELETE /productId/like\n  return axios.delete(`/product/${data}/like`);\n}\n\nfunction* unlikeProduct(action) {\n  try {\n    const result = yield call(unlikeProductAPI, action.data);\n    yield put({\n      type: UNLIKE_PRODUCT_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: UNLIKE_PRODUCT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchAddProduct() {\n  yield takeLatest(ADD_PRODUCT_REQUEST, addProduct);\n}\n\nfunction* watchRemoveProduct() {\n  yield takeLatest(REMOVE_PRODUCT_REQUEST, removeProduct);\n}\n\nfunction* watchLoadProducts() {\n  yield throttle(5000, LOAD_PRODUCTS_REQUEST, loadProducts);\n}\n\nfunction* watchUploadImages() {\n  yield takeLatest(UPLOAD_IMAGES_REQUEST, uploadImages);\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nfunction* watchAddRecomment() {\n  yield takeLatest(ADD_RECOMMENT_REQUEST, addRecomment);\n}\n\nfunction* watchLikeProduct() {\n  yield takeLatest(LIKE_PRODUCT_REQUEST, likeProduct);\n}\n\nfunction* watchUnlikeProduct() {\n  yield takeLatest(UNLIKE_PRODUCT_REQUEST, unlikeProduct);\n}\n\nexport default function* productSaga() {\n  yield all([fork(watchLoadProducts), fork(watchAddProduct), fork(watchRemoveProduct), fork(watchUploadImages), fork(watchAddComment), fork(watchAddRecomment), fork(watchLikeProduct), fork(watchUnlikeProduct)]);\n}","map":{"version":3,"sources":["/Users/minuk/Desktop/React-TradeMarket/front/sagas/product.js"],"names":["all","fork","put","call","takeLatest","throttle","axios","ADD_PRODUCT_REQUEST","ADD_PRODUCT_SUCCESS","ADD_PRODUCT_FAILURE","REMOVE_PRODUCT_REQUEST","REMOVE_PRODUCT_SUCCESS","REMOVE_PRODUCT_FAILURE","LOAD_PRODUCTS_REQUEST","LOAD_PRODUCTS_SUCCESS","LOAD_PRODUCTS_FAILURE","UPLOAD_IMAGES_REQUEST","UPLOAD_IMAGES_SUCCESS","UPLOAD_IMAGES_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","ADD_RECOMMENT_REQUEST","ADD_RECOMMENT_SUCCESS","ADD_RECOMMENT_FAILURE","LIKE_PRODUCT_REQUEST","LIKE_PRODUCT_SUCCESS","LIKE_PRODUCT_FAILURE","UNLIKE_PRODUCT_REQUEST","UNLIKE_PRODUCT_SUCCESS","UNLIKE_PRODUCT_FAILURE","ADD_PRODUCT_TO_ME","REMOVE_PRODUCT_OF_ME","addProductAPI","data","post","addProduct","action","result","type","id","error","response","removeProductAPI","delete","removeProduct","loadProductsAPI","lastId","get","loadProducts","uploadImagesAPI","uploadImages","err","addCommentAPI","productId","addComment","addRecommentAPI","commentId","addRecomment","console","log","likeProductAPI","patch","likeProduct","unlikeProductAPI","unlikeProduct","watchAddProduct","watchRemoveProduct","watchLoadProducts","watchUploadImages","watchAddComment","watchAddRecomment","watchLikeProduct","watchUnlikeProduct","productSaga"],"mappings":"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","sourcesContent":["import { all, fork, put, call, takeLatest, throttle } from 'redux-saga/effects';\nimport axios from 'axios';\n\nimport {\n  ADD_PRODUCT_REQUEST, ADD_PRODUCT_SUCCESS, ADD_PRODUCT_FAILURE,\n  REMOVE_PRODUCT_REQUEST, REMOVE_PRODUCT_SUCCESS, REMOVE_PRODUCT_FAILURE,\n  LOAD_PRODUCTS_REQUEST, LOAD_PRODUCTS_SUCCESS, LOAD_PRODUCTS_FAILURE,\n  UPLOAD_IMAGES_REQUEST, UPLOAD_IMAGES_SUCCESS, UPLOAD_IMAGES_FAILURE,\n  ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE,\n  ADD_RECOMMENT_REQUEST, ADD_RECOMMENT_SUCCESS, ADD_RECOMMENT_FAILURE,\n  LIKE_PRODUCT_REQUEST, LIKE_PRODUCT_SUCCESS, LIKE_PRODUCT_FAILURE,\n  UNLIKE_PRODUCT_REQUEST, UNLIKE_PRODUCT_SUCCESS, UNLIKE_PRODUCT_FAILURE,\n} from '../reducers/product';\nimport { ADD_PRODUCT_TO_ME, REMOVE_PRODUCT_OF_ME } from '../reducers/user';\n\nfunction addProductAPI(data) { // POST /product\n  return axios.post('/product', data);\n}\nfunction* addProduct(action) {\n  try {\n    const result = yield call(addProductAPI, action.data);\n    yield put({\n      type: ADD_PRODUCT_SUCCESS,\n      data: result.data,\n    });\n    yield put({\n      type: ADD_PRODUCT_TO_ME,\n      data: result.data.id,\n    });\n  } catch (error) {\n    yield put({\n      type: ADD_PRODUCT_FAILURE,\n      error: error.response.data,\n    });\n  }\n}\n\nfunction removeProductAPI(data) { // DELETE /product/productId\n  return axios.delete(`/product/${data}`);\n}\nfunction* removeProduct(action) {\n  try {\n    const result = yield call(removeProductAPI, action.data);\n    yield put({\n      type: REMOVE_PRODUCT_SUCCESS,\n      data: result.data,\n    });\n    yield put({\n      type: REMOVE_PRODUCT_OF_ME,\n      data: action.data,\n    });\n  } catch (error) {\n    yield put({\n      type: REMOVE_PRODUCT_FAILURE,\n      error: error.response.data,\n    });\n  }\n}\n\nfunction loadProductsAPI(lastId) { // GET /productc?lastId=lastId\n  return axios.get(`/products?lastId=${lastId || 0}`);\n}\nfunction* loadProducts(action) {\n  try {\n    const result = yield call(loadProductsAPI, action.lastId);\n    yield put({\n      type: LOAD_PRODUCTS_SUCCESS,\n      data: result.data,\n    });\n  } catch (error) {\n    yield put({\n      type: LOAD_PRODUCTS_FAILURE,\n      error: error.response.data,\n    });\n  }\n}\n\nfunction uploadImagesAPI(data) { // POST /product/images\n  return axios.post('/product/images', data);\n}\nfunction* uploadImages(action) {\n  try {\n    const result = yield call(uploadImagesAPI, action.data);\n    yield put({\n      type: UPLOAD_IMAGES_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: UPLOAD_IMAGES_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction addCommentAPI(data) { // POST /product/productId/comment\n  return axios.post(`/product/${data.productId}/comment`, data);\n}\nfunction* addComment(action) {\n  try {\n    const result = yield call(addCommentAPI, action.data);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction addRecommentAPI(data) { // POST /product/1/recomment\n  return axios.post(`/product/${data.commentId}/recomment`, data);\n}\nfunction* addRecomment(action) {\n  console.log(action.data);\n  try {\n    const result = yield call(addRecommentAPI, action.data);\n    yield put({\n      type: ADD_RECOMMENT_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_RECOMMENT_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction likeProductAPI(data) { // POST /productId/like\n  return axios.patch(`/product/${data}/like`, data);\n}\nfunction* likeProduct(action) {\n  try {\n    const result = yield call(likeProductAPI, action.data);\n    yield put({\n      type: LIKE_PRODUCT_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: LIKE_PRODUCT_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction unlikeProductAPI(data) { // DELETE /productId/like\n  return axios.delete(`/product/${data}/like`);\n}\nfunction* unlikeProduct(action) {\n  try {\n    const result = yield call(unlikeProductAPI, action.data);\n    yield put({\n      type: UNLIKE_PRODUCT_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: UNLIKE_PRODUCT_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction* watchAddProduct() {\n  yield takeLatest(ADD_PRODUCT_REQUEST, addProduct);\n}\nfunction* watchRemoveProduct() {\n  yield takeLatest(REMOVE_PRODUCT_REQUEST, removeProduct);\n}\nfunction* watchLoadProducts() {\n  yield throttle(5000, LOAD_PRODUCTS_REQUEST, loadProducts);\n}\nfunction* watchUploadImages() {\n  yield takeLatest(UPLOAD_IMAGES_REQUEST, uploadImages);\n}\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\nfunction* watchAddRecomment() {\n  yield takeLatest(ADD_RECOMMENT_REQUEST, addRecomment);\n}\nfunction* watchLikeProduct() {\n  yield takeLatest(LIKE_PRODUCT_REQUEST, likeProduct);\n}\nfunction* watchUnlikeProduct() {\n  yield takeLatest(UNLIKE_PRODUCT_REQUEST, unlikeProduct);\n}\n\nexport default function* productSaga() {\n  yield all([\n    fork(watchLoadProducts),\n    fork(watchAddProduct),\n    fork(watchRemoveProduct),\n    fork(watchUploadImages),\n    fork(watchAddComment),\n    fork(watchAddRecomment),\n    fork(watchLikeProduct),\n    fork(watchUnlikeProduct),\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}