{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/minuk/Desktop/React-TradeMarket/front/components/ProductForm.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect } from 'react';\nimport { Button, Form, Input } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport useInput from '../hooks/useInput';\nimport { ADD_PRODUCT_REQUEST } from '../reducers/product';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar ProductionForm = function ProductionForm() {\n  _s();\n\n  var _useSelector = useSelector(function (state) {\n    return state.product;\n  }),\n      imagePaths = _useSelector.imagePaths,\n      addProductDone = _useSelector.addProductDone;\n\n  var dispatch = useDispatch();\n\n  var _useInput = useInput(''),\n      _useInput2 = _slicedToArray(_useInput, 3),\n      text = _useInput2[0],\n      onChangeText = _useInput2[1],\n      setText = _useInput2[2];\n\n  useEffect(function () {\n    if (addProductDone) {\n      setText('');\n    }\n  }, [addProductDone]);\n  var onSubmit = useCallback(function () {\n    if (!text || !text.trim()) {\n      return alert('내용을 작성하세요.');\n    }\n\n    var formData = new FormData();\n    imagePaths.forEach(function (p) {\n      formData.append('image', p);\n    });\n    formData.append('content', text);\n    return dispatch({\n      type: ADD_PRODUCT_REQUEST,\n      data: formData\n    });\n  }, [text, imagePaths]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      style: {\n        margin: '10px 0 20px'\n      },\n      encType: \"nultipart/form-data\",\n      onFinish: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Input.TextArea, {\n        placeholder: \"\\uB0B4\\uC6A9\\uC785\\uB825\",\n        value: text,\n        onChange: onChangeText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          name: \"image\",\n          multiple: true,\n          hidden: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Button, {\n          children: \"\\uC0C1\\uD488 \\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          style: {\n            \"float\": 'right'\n          },\n          htmlType: \"submit\",\n          children: \"\\uC800\\uC7A5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false);\n};\n\n_s(ProductionForm, \"/GeCOOlRJVHLFnbEEuTYOA3CwnQ=\", false, function () {\n  return [useSelector, useDispatch, useInput];\n});\n\n_c = ProductionForm;\nexport default ProductionForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductionForm\");","map":{"version":3,"sources":["/Users/minuk/Desktop/React-TradeMarket/front/components/ProductForm.js"],"names":["React","useCallback","useEffect","Button","Form","Input","useDispatch","useSelector","useInput","ADD_PRODUCT_REQUEST","ProductionForm","state","product","imagePaths","addProductDone","dispatch","text","onChangeText","setText","onSubmit","trim","alert","formData","FormData","forEach","p","append","type","data","margin"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,SAA7B,QAA8C,OAA9C;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,QAAoC,MAApC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,SAASC,mBAAT,QAAoC,qBAApC;;;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAAA;;AAAA,qBACYH,WAAW,CAAC,UAACI,KAAD;AAAA,WAAWA,KAAK,CAACC,OAAjB;AAAA,GAAD,CADvB;AAAA,MACnBC,UADmB,gBACnBA,UADmB;AAAA,MACPC,cADO,gBACPA,cADO;;AAE3B,MAAMC,QAAQ,GAAGT,WAAW,EAA5B;;AAF2B,kBAGWE,QAAQ,CAAC,EAAD,CAHnB;AAAA;AAAA,MAGpBQ,IAHoB;AAAA,MAGdC,YAHc;AAAA,MAGAC,OAHA;;AAK3BhB,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIY,cAAJ,EAAoB;AAClBI,MAAAA,OAAO,CAAC,EAAD,CAAP;AACD;AACF,GAJQ,EAIN,CAACJ,cAAD,CAJM,CAAT;AAMA,MAAMK,QAAQ,GAAGlB,WAAW,CAAC,YAAM;AACjC,QAAI,CAACe,IAAD,IAAS,CAACA,IAAI,CAACI,IAAL,EAAd,EAA2B;AACzB,aAAOC,KAAK,CAAC,YAAD,CAAZ;AACD;;AACD,QAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAV,IAAAA,UAAU,CAACW,OAAX,CAAmB,UAACC,CAAD,EAAO;AACxBH,MAAAA,QAAQ,CAACI,MAAT,CAAgB,OAAhB,EAAyBD,CAAzB;AACD,KAFD;AAGAH,IAAAA,QAAQ,CAACI,MAAT,CAAgB,SAAhB,EAA2BV,IAA3B;AACA,WAAOD,QAAQ,CAAC;AACdY,MAAAA,IAAI,EAAElB,mBADQ;AAEdmB,MAAAA,IAAI,EAAEN;AAFQ,KAAD,CAAf;AAID,GAb2B,EAazB,CAACN,IAAD,EAAOH,UAAP,CAbyB,CAA5B;AAcA,sBACE;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAEgB,QAAAA,MAAM,EAAE;AAAV,OAAb;AAAwC,MAAA,OAAO,EAAC,qBAAhD;AAAsE,MAAA,QAAQ,EAAEV,QAAhF;AAAA,8BACE,QAAC,KAAD,CAAO,QAAP;AAAgB,QAAA,WAAW,EAAC,0BAA5B;AAAmC,QAAA,KAAK,EAAEH,IAA1C;AAAgD,QAAA,QAAQ,EAAEC;AAA1D;AAAA;AAAA;AAAA;AAAA,eADF,eAEE;AAAA,gCACE;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,IAAI,EAAC,OAAxB;AAAgC,UAAA,QAAQ,MAAxC;AAAyC,UAAA,MAAM;AAA/C;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFF,eAGE;AAAA;AAAA;AAAA;AAAA,iBAHF,eAIE,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,SAAb;AAAuB,UAAA,KAAK,EAAE;AAAE,qBAAO;AAAT,WAA9B;AAAkD,UAAA,QAAQ,EAAC,QAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAaD,CAtCD;;GAAMP,c;UACmCH,W,EACtBD,W,EACqBE,Q;;;KAHlCE,c;AAwCN,eAAeA,cAAf","sourcesContent":["import React, { useCallback, useEffect } from 'react';\nimport { Button, Form, Input } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport useInput from '../hooks/useInput';\nimport { ADD_PRODUCT_REQUEST } from '../reducers/product';\n\nconst ProductionForm = () => {\n  const { imagePaths, addProductDone } = useSelector((state) => state.product);\n  const dispatch = useDispatch();\n  const [text, onChangeText, setText] = useInput('');\n\n  useEffect(() => {\n    if (addProductDone) {\n      setText('');\n    }\n  }, [addProductDone]);\n\n  const onSubmit = useCallback(() => {\n    if (!text || !text.trim()) {\n      return alert('내용을 작성하세요.');\n    }\n    const formData = new FormData();\n    imagePaths.forEach((p) => {\n      formData.append('image', p);\n    });\n    formData.append('content', text);\n    return dispatch({\n      type: ADD_PRODUCT_REQUEST,\n      data: formData,\n    });\n  }, [text, imagePaths]);\n  return (\n    <>\n      <Form style={{ margin: '10px 0 20px' }} encType=\"nultipart/form-data\" onFinish={onSubmit}>\n        <Input.TextArea placeholder=\"내용입력\" value={text} onChange={onChangeText} />\n        <div>\n          <input type=\"file\" name=\"image\" multiple hidden />\n          <Button>상품 이미지 업로드</Button>\n          <br />\n          <Button type=\"primary\" style={{ float: 'right' }} htmlType=\"submit\">저장</Button>\n        </div>\n      </Form>\n    </>\n  );\n};\n\nexport default ProductionForm;\n"]},"metadata":{},"sourceType":"module"}