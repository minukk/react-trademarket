{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/minuk/Desktop/React-TradeMarket/front/components/ProductForm.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { Button, Form, Input, Select } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport useInput from '../hooks/useInput';\nimport { ADD_PRODUCT_REQUEST, UPLOAD_IMAGES_REQUEST } from '../reducers/product';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar ProductionForm = function ProductionForm() {\n  _s();\n\n  var _useSelector = useSelector(function (state) {\n    return state.product;\n  }),\n      imagePaths = _useSelector.imagePaths,\n      addProductDone = _useSelector.addProductDone;\n\n  var dispatch = useDispatch();\n\n  var _useInput = useInput(''),\n      _useInput2 = _slicedToArray(_useInput, 3),\n      text = _useInput2[0],\n      onChangeText = _useInput2[1],\n      setText = _useInput2[2];\n\n  var _useState = useState(''),\n      category = _useState[0],\n      setCategory = _useState[1];\n\n  var onSelect = function onSelect(value) {\n    console.log(\"select \".concat(value));\n    setCategory(value);\n  };\n\n  useEffect(function () {\n    if (addProductDone) {\n      setText('');\n    }\n  }, [addProductDone]);\n  var onSubmit = useCallback(function () {\n    if (!text || !text.trim()) {\n      return alert('내용을 작성하세요.');\n    }\n\n    var formData = new FormData();\n    imagePaths.forEach(function (p) {\n      formData.append('image', p);\n    });\n    formData.append('content', text);\n    formData.append('category', category);\n    return dispatch({\n      type: ADD_PRODUCT_REQUEST,\n      data: formData\n    });\n  }, [text, category, imagePaths]);\n  var imageInput = useRef();\n  var onClickImageUpload = useCallback(function () {\n    imageInput.current.click();\n  }, [imageInput.current]);\n  var onChangeImages = useCallback(function (e) {\n    var imageFormData = new FormData();\n    [].forEach.call(e.target.files, function (f) {\n      imageFormData.append('image', f);\n    });\n    dispatch({\n      type: UPLOAD_IMAGES_REQUEST,\n      data: imageFormData\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      style: {\n        margin: '10px 0 20px'\n      },\n      encType: \"nultipart/form-data\",\n      onFinish: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Select, {\n        defaultValue: \"\\uCE74\\uB808\\uACE0\\uB9AC\",\n        onChange: onSelect,\n        style: {\n          width: 200\n        },\n        children: [/*#__PURE__*/_jsxDEV(Select.Option, {\n          value: \"digital\",\n          children: \"\\uB514\\uC9C0\\uD138/\\uAC00\\uC804\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Select.Option, {\n          value: \"cloths\",\n          children: \"\\uC758\\uB958\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Select.Option, {\n          value: \"life\",\n          children: \"\\uC0DD\\uD65C\\uC6A9\\uD488\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Select.Option, {\n          value: \"other\",\n          children: \"\\uAE30\\uD0C0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: '10px 0 10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          name: \"image\",\n          multiple: true,\n          hidden: true,\n          ref: imageInput,\n          onChange: onChangeImages\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: onClickImageUpload,\n          style: {\n            width: 200\n          },\n          children: \"\\uC0C1\\uD488 \\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Input.TextArea, {\n        placeholder: \"\\uB0B4\\uC6A9\\uC785\\uB825\",\n        value: text,\n        onChange: onChangeText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        style: {\n          \"float\": 'right'\n        },\n        htmlType: \"submit\",\n        children: \"\\uC800\\uC7A5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: imagePaths.map(function (v, i) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'inline-block'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"http://localhost:3080/\".concat(v),\n              style: {\n                width: '200px'\n              },\n              alt: v\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                children: \"\\uC81C\\uAC70\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, _this)]\n          }, v, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false);\n};\n\n_s(ProductionForm, \"VhHq9CA5JS7i2gDgR/CeRkRMxD0=\", false, function () {\n  return [useSelector, useDispatch, useInput];\n});\n\n_c = ProductionForm;\nexport default ProductionForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductionForm\");","map":{"version":3,"sources":["/Users/minuk/Desktop/React-TradeMarket/front/components/ProductForm.js"],"names":["React","useCallback","useEffect","useRef","useState","Button","Form","Input","Select","useDispatch","useSelector","useInput","ADD_PRODUCT_REQUEST","UPLOAD_IMAGES_REQUEST","ProductionForm","state","product","imagePaths","addProductDone","dispatch","text","onChangeText","setText","category","setCategory","onSelect","value","console","log","onSubmit","trim","alert","formData","FormData","forEach","p","append","type","data","imageInput","onClickImageUpload","current","click","onChangeImages","e","imageFormData","call","target","files","f","margin","width","map","v","i","display"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { Button, Form, Input, Select } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport useInput from '../hooks/useInput';\nimport { ADD_PRODUCT_REQUEST, UPLOAD_IMAGES_REQUEST } from '../reducers/product';\n\nconst ProductionForm = () => {\n  const { imagePaths, addProductDone } = useSelector((state) => state.product);\n  const dispatch = useDispatch();\n  const [text, onChangeText, setText] = useInput('');\n  const [category, setCategory] = useState('');\n\n  const onSelect = (value) => {\n    console.log(`select ${value}`);\n    setCategory(value);\n  };\n\n  useEffect(() => {\n    if (addProductDone) {\n      setText('');\n    }\n  }, [addProductDone]);\n\n  const onSubmit = useCallback(() => {\n    if (!text || !text.trim()) {\n      return alert('내용을 작성하세요.');\n    }\n    const formData = new FormData();\n    imagePaths.forEach((p) => {\n      formData.append('image', p);\n    });\n    formData.append('content', text);\n    formData.append('category', category);\n    return dispatch({\n      type: ADD_PRODUCT_REQUEST,\n      data: formData,\n    });\n  }, [text, category, imagePaths]);\n\n  const imageInput = useRef();\n  const onClickImageUpload = useCallback(() => {\n    imageInput.current.click();\n  }, [imageInput.current]);\n\n  const onChangeImages = useCallback((e) => {\n    const imageFormData = new FormData();\n    [].forEach.call(e.target.files, (f) => {\n      imageFormData.append('image', f);\n    });\n    dispatch({\n      type: UPLOAD_IMAGES_REQUEST,\n      data: imageFormData,\n    });\n  }, []);\n  return (\n    <>\n      <Form style={{ margin: '10px 0 20px' }} encType=\"nultipart/form-data\" onFinish={onSubmit}>\n        <Select defaultValue=\"카레고리\" onChange={onSelect} style={{ width: 200 }}>\n          <Select.Option value=\"digital\">디지털/가전</Select.Option>\n          <Select.Option value=\"cloths\">의류</Select.Option>\n          <Select.Option value=\"life\">생활용품</Select.Option>\n          <Select.Option value=\"other\">기타</Select.Option>\n        </Select>\n        <div style={{ margin: '10px 0 10px' }}>\n          <input type=\"file\" name=\"image\" multiple hidden ref={imageInput} onChange={onChangeImages} />\n          <Button onClick={onClickImageUpload} style={{ width: 200 }}>상품 이미지 업로드</Button>\n          <br />\n        </div>\n        <Input.TextArea placeholder=\"내용입력\" value={text} onChange={onChangeText} />\n        <Button type=\"primary\" style={{ float: 'right' }} htmlType=\"submit\">저장</Button>\n        <div>\n          {imagePaths.map((v, i) => (\n            <div key={v} style={{ display: 'inline-block' }}>\n              <img src={`http://localhost:3080/${v}`} style={{ width: '200px' }} alt={v} />\n              <div>\n                <Button>제거</Button>\n              </div>\n            </div>\n          ))}\n        </div>\n      </Form>\n    </>\n  );\n};\n\nexport default ProductionForm;\n"]},"metadata":{},"sourceType":"module"}