{"ast":null,"code":"import { all, fork, put, call, takeLatest, throttle } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { ADD_PRODUCT_REQUEST, ADD_PRODUCT_SUCCESS, ADD_PRODUCT_FAILURE, REMOVE_PRODUCT_REQUEST, REMOVE_PRODUCT_SUCCESS, REMOVE_PRODUCT_FAILURE, LOAD_PRODUCTS_REQUEST, LOAD_PRODUCTS_SUCCESS, LOAD_PRODUCTS_FAILURE, UPLOAD_IMAGES_REQUEST, UPLOAD_IMAGES_SUCCESS, UPLOAD_IMAGES_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE, ADD_RECOMMENT_REQUEST, ADD_RECOMMENT_SUCCESS, ADD_RECOMMENT_FAILURE, LIKE_PRODUCT_REQUEST, LIKE_PRODUCT_SUCCESS, LIKE_PRODUCT_FAILURE, UNLIKE_PRODUCT_REQUEST, UNLIKE_PRODUCT_SUCCESS, UNLIKE_PRODUCT_FAILURE, LOAD_PRODUCT_REQUEST, LOAD_PRODUCT_SUCCESS, LOAD_PRODUCT_FAILURE, LOAD_USER_PRODUCT_REQUEST, LOAD_USER_PRODUCT_SUCCESS, LOAD_USER_PRODUCT_FAILURE, LOAD_CATEGORY_REQUEST, LOAD_CATEGORY_SUCCESS, LOAD_CATEGORY_FAILURE } from '../reducers/product';\nimport { ADD_PRODUCT_TO_ME, REMOVE_PRODUCT_OF_ME } from '../reducers/user';\n\nfunction addProductAPI(data) {\n  // POST /product\n  return axios.post('/product', data);\n}\n\nfunction* addProduct(action) {\n  try {\n    const result = yield call(addProductAPI, action.data);\n    yield put({\n      type: ADD_PRODUCT_SUCCESS,\n      data: result.data\n    });\n    yield put({\n      type: ADD_PRODUCT_TO_ME,\n      data: result.data.id\n    });\n  } catch (error) {\n    yield put({\n      type: ADD_PRODUCT_FAILURE,\n      error: error.response.data\n    });\n  }\n}\n\nfunction removeProductAPI(data) {\n  // DELETE /product/productId\n  return axios.delete(`/product/${data}`);\n}\n\nfunction* removeProduct(action) {\n  try {\n    const result = yield call(removeProductAPI, action.data);\n    yield put({\n      type: REMOVE_PRODUCT_SUCCESS,\n      data: result.data\n    });\n    yield put({\n      type: REMOVE_PRODUCT_OF_ME,\n      data: action.data\n    });\n  } catch (error) {\n    yield put({\n      type: REMOVE_PRODUCT_FAILURE,\n      error: error.response.data\n    });\n  }\n}\n\nfunction loadProductsAPI(lastId) {\n  // GET /productc?lastId=lastId\n  return axios.get(`/products?lastId=${lastId || 0}`);\n}\n\nfunction* loadProducts(action) {\n  try {\n    const result = yield call(loadProductsAPI, action.lastId);\n    yield put({\n      type: LOAD_PRODUCTS_SUCCESS,\n      data: result.data\n    });\n  } catch (error) {\n    yield put({\n      type: LOAD_PRODUCTS_FAILURE,\n      error: error.response.data\n    });\n  }\n}\n\nfunction uploadImagesAPI(data) {\n  // POST /product/images\n  return axios.post('/product/images', data);\n}\n\nfunction* uploadImages(action) {\n  try {\n    const result = yield call(uploadImagesAPI, action.data);\n    yield put({\n      type: UPLOAD_IMAGES_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: UPLOAD_IMAGES_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction addCommentAPI(data) {\n  // POST /product/productId/comment\n  return axios.post(`/product/${data.productId}/comment`, data);\n}\n\nfunction* addComment(action) {\n  console.log(action.data);\n\n  try {\n    const result = yield call(addCommentAPI, action.data);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction addRecommentAPI(data) {\n  // POST /product/1/recomment\n  return axios.post(`/product/${data.commentId}/recomment`, data);\n}\n\nfunction* addRecomment(action) {\n  console.log(action.data);\n  console.log(action.data.productId);\n  console.log(action.data.ProductId);\n\n  try {\n    const result = yield call(addRecommentAPI, action.data);\n    yield put({\n      type: ADD_RECOMMENT_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.log(err);\n    yield put({\n      type: ADD_RECOMMENT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction likeProductAPI(data) {\n  // POST /productId/like\n  return axios.patch(`/product/${data}/like`, data);\n}\n\nfunction* likeProduct(action) {\n  try {\n    const result = yield call(likeProductAPI, action.data);\n    yield put({\n      type: LIKE_PRODUCT_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LIKE_PRODUCT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction unlikeProductAPI(data) {\n  // DELETE /productId/like\n  return axios.delete(`/product/${data}/like`);\n}\n\nfunction* unlikeProduct(action) {\n  try {\n    const result = yield call(unlikeProductAPI, action.data);\n    yield put({\n      type: UNLIKE_PRODUCT_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: UNLIKE_PRODUCT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction loadProductAPI(data) {\n  return axios.get(`/product/${data}`);\n}\n\nfunction* loadProduct(action) {\n  try {\n    const result = yield call(loadProductAPI, action.data);\n    yield put({\n      type: LOAD_PRODUCT_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_PRODUCT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction loadUserProductAPI(data, lastId) {\n  return axios.get(`/user/${data}/products?lastId=${lastId || 0}`);\n}\n\nfunction* loadUserProduct(action) {\n  try {\n    const result = yield call(loadUserProductAPI, action.data, action.lastId);\n    yield put({\n      type: LOAD_USER_PRODUCT_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_USER_PRODUCT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction loadCategoryAPI(data, lastId) {\n  console.log(data);\n  return axios.get(`/category/${encodeURIComponent(data)}?lastId=${lastId || 0}`);\n}\n\nfunction* loadCategory(action) {\n  try {\n    const result = yield call(loadCategoryAPI, action.data, action.lastId);\n    yield put({\n      type: LOAD_CATEGORY_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_CATEGORY_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchAddProduct() {\n  yield takeLatest(ADD_PRODUCT_REQUEST, addProduct);\n}\n\nfunction* watchRemoveProduct() {\n  yield takeLatest(REMOVE_PRODUCT_REQUEST, removeProduct);\n}\n\nfunction* watchLoadProducts() {\n  yield throttle(5000, LOAD_PRODUCTS_REQUEST, loadProducts);\n}\n\nfunction* watchUploadImages() {\n  yield takeLatest(UPLOAD_IMAGES_REQUEST, uploadImages);\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nfunction* watchAddRecomment() {\n  yield takeLatest(ADD_RECOMMENT_REQUEST, addRecomment);\n}\n\nfunction* watchLikeProduct() {\n  yield takeLatest(LIKE_PRODUCT_REQUEST, likeProduct);\n}\n\nfunction* watchUnlikeProduct() {\n  yield takeLatest(UNLIKE_PRODUCT_REQUEST, unlikeProduct);\n}\n\nfunction* watchLoadProduct() {\n  yield takeLatest(LOAD_PRODUCT_REQUEST, loadProduct);\n}\n\nfunction* watchLoadUserProduct() {\n  yield takeLatest(LOAD_USER_PRODUCT_REQUEST, loadUserProduct);\n}\n\nfunction* watchLoadCategory() {\n  yield takeLatest(LOAD_CATEGORY_REQUEST, loadCategory);\n}\n\nexport default function* productSaga() {\n  yield all([fork(watchLoadProducts), fork(watchAddProduct), fork(watchRemoveProduct), fork(watchUploadImages), fork(watchAddComment), fork(watchAddRecomment), fork(watchLikeProduct), fork(watchUnlikeProduct), fork(watchLoadProduct), fork(watchLoadUserProduct), fork(watchLoadCategory)]);\n}","map":{"version":3,"sources":["/Users/minuk/Desktop/React-TradeMarket/front/sagas/product.js"],"names":["all","fork","put","call","takeLatest","throttle","axios","ADD_PRODUCT_REQUEST","ADD_PRODUCT_SUCCESS","ADD_PRODUCT_FAILURE","REMOVE_PRODUCT_REQUEST","REMOVE_PRODUCT_SUCCESS","REMOVE_PRODUCT_FAILURE","LOAD_PRODUCTS_REQUEST","LOAD_PRODUCTS_SUCCESS","LOAD_PRODUCTS_FAILURE","UPLOAD_IMAGES_REQUEST","UPLOAD_IMAGES_SUCCESS","UPLOAD_IMAGES_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","ADD_RECOMMENT_REQUEST","ADD_RECOMMENT_SUCCESS","ADD_RECOMMENT_FAILURE","LIKE_PRODUCT_REQUEST","LIKE_PRODUCT_SUCCESS","LIKE_PRODUCT_FAILURE","UNLIKE_PRODUCT_REQUEST","UNLIKE_PRODUCT_SUCCESS","UNLIKE_PRODUCT_FAILURE","LOAD_PRODUCT_REQUEST","LOAD_PRODUCT_SUCCESS","LOAD_PRODUCT_FAILURE","LOAD_USER_PRODUCT_REQUEST","LOAD_USER_PRODUCT_SUCCESS","LOAD_USER_PRODUCT_FAILURE","LOAD_CATEGORY_REQUEST","LOAD_CATEGORY_SUCCESS","LOAD_CATEGORY_FAILURE","ADD_PRODUCT_TO_ME","REMOVE_PRODUCT_OF_ME","addProductAPI","data","post","addProduct","action","result","type","id","error","response","removeProductAPI","delete","removeProduct","loadProductsAPI","lastId","get","loadProducts","uploadImagesAPI","uploadImages","err","addCommentAPI","productId","addComment","console","log","addRecommentAPI","commentId","addRecomment","ProductId","likeProductAPI","patch","likeProduct","unlikeProductAPI","unlikeProduct","loadProductAPI","loadProduct","loadUserProductAPI","loadUserProduct","loadCategoryAPI","encodeURIComponent","loadCategory","watchAddProduct","watchRemoveProduct","watchLoadProducts","watchUploadImages","watchAddComment","watchAddRecomment","watchLikeProduct","watchUnlikeProduct","watchLoadProduct","watchLoadUserProduct","watchLoadCategory","productSaga"],"mappings":"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","sourcesContent":["import { all, fork, put, call, takeLatest, throttle } from 'redux-saga/effects';\nimport axios from 'axios';\n\nimport {\n  ADD_PRODUCT_REQUEST, ADD_PRODUCT_SUCCESS, ADD_PRODUCT_FAILURE,\n  REMOVE_PRODUCT_REQUEST, REMOVE_PRODUCT_SUCCESS, REMOVE_PRODUCT_FAILURE,\n  LOAD_PRODUCTS_REQUEST, LOAD_PRODUCTS_SUCCESS, LOAD_PRODUCTS_FAILURE,\n  UPLOAD_IMAGES_REQUEST, UPLOAD_IMAGES_SUCCESS, UPLOAD_IMAGES_FAILURE,\n  ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE,\n  ADD_RECOMMENT_REQUEST, ADD_RECOMMENT_SUCCESS, ADD_RECOMMENT_FAILURE,\n  LIKE_PRODUCT_REQUEST, LIKE_PRODUCT_SUCCESS, LIKE_PRODUCT_FAILURE,\n  UNLIKE_PRODUCT_REQUEST, UNLIKE_PRODUCT_SUCCESS, UNLIKE_PRODUCT_FAILURE,\n  LOAD_PRODUCT_REQUEST, LOAD_PRODUCT_SUCCESS, LOAD_PRODUCT_FAILURE,\n  LOAD_USER_PRODUCT_REQUEST, LOAD_USER_PRODUCT_SUCCESS, LOAD_USER_PRODUCT_FAILURE,\n  LOAD_CATEGORY_REQUEST, LOAD_CATEGORY_SUCCESS, LOAD_CATEGORY_FAILURE,\n} from '../reducers/product';\nimport { ADD_PRODUCT_TO_ME, REMOVE_PRODUCT_OF_ME } from '../reducers/user';\n\nfunction addProductAPI(data) { // POST /product\n  return axios.post('/product', data);\n}\nfunction* addProduct(action) {\n  try {\n    const result = yield call(addProductAPI, action.data);\n    yield put({\n      type: ADD_PRODUCT_SUCCESS,\n      data: result.data,\n    });\n    yield put({\n      type: ADD_PRODUCT_TO_ME,\n      data: result.data.id,\n    });\n  } catch (error) {\n    yield put({\n      type: ADD_PRODUCT_FAILURE,\n      error: error.response.data,\n    });\n  }\n}\n\nfunction removeProductAPI(data) { // DELETE /product/productId\n  return axios.delete(`/product/${data}`);\n}\nfunction* removeProduct(action) {\n  try {\n    const result = yield call(removeProductAPI, action.data);\n    yield put({\n      type: REMOVE_PRODUCT_SUCCESS,\n      data: result.data,\n    });\n    yield put({\n      type: REMOVE_PRODUCT_OF_ME,\n      data: action.data,\n    });\n  } catch (error) {\n    yield put({\n      type: REMOVE_PRODUCT_FAILURE,\n      error: error.response.data,\n    });\n  }\n}\n\nfunction loadProductsAPI(lastId) { // GET /productc?lastId=lastId\n  return axios.get(`/products?lastId=${lastId || 0}`);\n}\nfunction* loadProducts(action) {\n  try {\n    const result = yield call(loadProductsAPI, action.lastId);\n    yield put({\n      type: LOAD_PRODUCTS_SUCCESS,\n      data: result.data,\n    });\n  } catch (error) {\n    yield put({\n      type: LOAD_PRODUCTS_FAILURE,\n      error: error.response.data,\n    });\n  }\n}\n\nfunction uploadImagesAPI(data) { // POST /product/images\n  return axios.post('/product/images', data);\n}\nfunction* uploadImages(action) {\n  try {\n    const result = yield call(uploadImagesAPI, action.data);\n    yield put({\n      type: UPLOAD_IMAGES_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: UPLOAD_IMAGES_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction addCommentAPI(data) { // POST /product/productId/comment\n  return axios.post(`/product/${data.productId}/comment`, data);\n}\nfunction* addComment(action) {\n  console.log(action.data);\n  try {\n    const result = yield call(addCommentAPI, action.data);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction addRecommentAPI(data) { // POST /product/1/recomment\n  return axios.post(`/product/${data.commentId}/recomment`, data);\n}\nfunction* addRecomment(action) {\n  console.log(action.data);\n  console.log(action.data.productId);\n  console.log(action.data.ProductId);\n  try {\n    const result = yield call(addRecommentAPI, action.data);\n    yield put({\n      type: ADD_RECOMMENT_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    console.log(err);\n    yield put({\n      type: ADD_RECOMMENT_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction likeProductAPI(data) { // POST /productId/like\n  return axios.patch(`/product/${data}/like`, data);\n}\nfunction* likeProduct(action) {\n  try {\n    const result = yield call(likeProductAPI, action.data);\n    yield put({\n      type: LIKE_PRODUCT_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: LIKE_PRODUCT_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction unlikeProductAPI(data) { // DELETE /productId/like\n  return axios.delete(`/product/${data}/like`);\n}\nfunction* unlikeProduct(action) {\n  try {\n    const result = yield call(unlikeProductAPI, action.data);\n    yield put({\n      type: UNLIKE_PRODUCT_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: UNLIKE_PRODUCT_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction loadProductAPI(data) {\n  return axios.get(`/product/${data}`);\n}\nfunction* loadProduct(action) {\n  try {\n    const result = yield call(loadProductAPI, action.data);\n    yield put({\n      type: LOAD_PRODUCT_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_PRODUCT_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction loadUserProductAPI(data, lastId) {\n  return axios.get(`/user/${data}/products?lastId=${lastId || 0}`);\n}\nfunction* loadUserProduct(action) {\n  try {\n    const result = yield call(loadUserProductAPI, action.data, action.lastId);\n    yield put({\n      type: LOAD_USER_PRODUCT_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_USER_PRODUCT_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction loadCategoryAPI(data, lastId) {\n  console.log(data);\n  return axios.get(`/category/${encodeURIComponent(data)}?lastId=${lastId || 0}`);\n}\nfunction* loadCategory(action) {\n  try {\n    const result = yield call(loadCategoryAPI, action.data, action.lastId);\n    yield put({\n      type: LOAD_CATEGORY_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_CATEGORY_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction* watchAddProduct() {\n  yield takeLatest(ADD_PRODUCT_REQUEST, addProduct);\n}\nfunction* watchRemoveProduct() {\n  yield takeLatest(REMOVE_PRODUCT_REQUEST, removeProduct);\n}\nfunction* watchLoadProducts() {\n  yield throttle(5000, LOAD_PRODUCTS_REQUEST, loadProducts);\n}\nfunction* watchUploadImages() {\n  yield takeLatest(UPLOAD_IMAGES_REQUEST, uploadImages);\n}\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\nfunction* watchAddRecomment() {\n  yield takeLatest(ADD_RECOMMENT_REQUEST, addRecomment);\n}\nfunction* watchLikeProduct() {\n  yield takeLatest(LIKE_PRODUCT_REQUEST, likeProduct);\n}\nfunction* watchUnlikeProduct() {\n  yield takeLatest(UNLIKE_PRODUCT_REQUEST, unlikeProduct);\n}\nfunction* watchLoadProduct() {\n  yield takeLatest(LOAD_PRODUCT_REQUEST, loadProduct);\n}\nfunction* watchLoadUserProduct() {\n  yield takeLatest(LOAD_USER_PRODUCT_REQUEST, loadUserProduct);\n}\nfunction* watchLoadCategory() {\n  yield takeLatest(LOAD_CATEGORY_REQUEST, loadCategory);\n}\n\nexport default function* productSaga() {\n  yield all([\n    fork(watchLoadProducts),\n    fork(watchAddProduct),\n    fork(watchRemoveProduct),\n    fork(watchUploadImages),\n    fork(watchAddComment),\n    fork(watchAddRecomment),\n    fork(watchLikeProduct),\n    fork(watchUnlikeProduct),\n    fork(watchLoadProduct),\n    fork(watchLoadUserProduct),\n    fork(watchLoadCategory),\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}