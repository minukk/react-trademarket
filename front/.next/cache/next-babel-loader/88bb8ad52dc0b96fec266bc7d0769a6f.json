{"ast":null,"code":"var _jsxFileName = \"/Users/minuk/Desktop/React-TradeMarket/front/components/Recomment.js\",\n    _this = this;\n\nimport React, { useState, useCallback } from 'react';\nimport { List, Comment, Avatar } from 'antd';\nimport PropTypes from 'prop-types'; // import RecommentForm from './RecommentForm';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar Recomment = function Recomment(_ref) {\n  var comment = _ref.comment;\n  // const [recommentOpen, setRecommentOpen] = useState(false);\n  // const recommentFormOpen = useCallback(() => {\n  //   setRecommentOpen((prev) => !prev);\n  // }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(List, {\n      itemLayout: \"horizontal\",\n      locale: {\n        emptyText: ' '\n      },\n      dataSource: comment.Recomments,\n      renderItem: function renderItem(item) {\n        return /*#__PURE__*/_jsxDEV(List.Item, {\n          children: /*#__PURE__*/_jsxDEV(Comment, {\n            author: item.User.nickname,\n            avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n              children: item.User.nickname[0]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 17\n            }, _this),\n            content: item.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, _this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false);\n};\n\n_c = Recomment;\nRecomment.propTypes = {\n  comment: PropTypes.any.isRequired\n};\nexport default Recomment;\n\nvar _c;\n\n$RefreshReg$(_c, \"Recomment\");","map":{"version":3,"sources":["/Users/minuk/Desktop/React-TradeMarket/front/components/Recomment.js"],"names":["React","useState","useCallback","List","Comment","Avatar","PropTypes","Recomment","comment","emptyText","Recomments","item","User","nickname","content","propTypes","any","isRequired"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,QAA6C,OAA7C;AACA,SAASC,IAAT,EAAeC,OAAf,EAAwBC,MAAxB,QAAsC,MAAtC;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;;;;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAAiB;AAAA,MAAdC,OAAc,QAAdA,OAAc;AACjC;AAEA;AACA;AACA;AACA,sBACE;AAAA,2BACE,QAAC,IAAD;AACE,MAAA,UAAU,EAAC,YADb;AAEE,MAAA,MAAM,EAAE;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAFV;AAGE,MAAA,UAAU,EAAED,OAAO,CAACE,UAHtB;AAIE,MAAA,UAAU,EAAE,oBAACC,IAAD;AAAA,4BACV,QAAC,IAAD,CAAM,IAAN;AAAA,iCACE,QAAC,OAAD;AACE,YAAA,MAAM,EAAEA,IAAI,CAACC,IAAL,CAAUC,QADpB;AAEE,YAAA,MAAM,eACJ,QAAC,MAAD;AAAA,wBAASF,IAAI,CAACC,IAAL,CAAUC,QAAV,CAAmB,CAAnB;AAAT;AAAA;AAAA;AAAA;AAAA,qBAHJ;AAKE,YAAA,OAAO,EAAEF,IAAI,CAACG;AALhB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,iBADU;AAAA;AAJd;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAsBD,CA5BD;;KAAMP,S;AA8BNA,SAAS,CAACQ,SAAV,GAAsB;AACpBP,EAAAA,OAAO,EAAEF,SAAS,CAACU,GAAV,CAAcC;AADH,CAAtB;AAIA,eAAeV,SAAf","sourcesContent":["import React, { useState, useCallback } from 'react';\nimport { List, Comment, Avatar } from 'antd';\nimport PropTypes from 'prop-types';\n\n// import RecommentForm from './RecommentForm';\n\nconst Recomment = ({ comment }) => {\n  // const [recommentOpen, setRecommentOpen] = useState(false);\n\n  // const recommentFormOpen = useCallback(() => {\n  //   setRecommentOpen((prev) => !prev);\n  // }, []);\n  return (\n    <>\n      <List\n        itemLayout=\"horizontal\"\n        locale={{ emptyText: ' ' }}\n        dataSource={comment.Recomments}\n        renderItem={(item) => (\n          <List.Item>\n            <Comment\n              author={item.User.nickname}\n              avatar={(\n                <Avatar>{item.User.nickname[0]}</Avatar>\n              )}\n              content={item.content}\n            />\n          </List.Item>\n        )}\n      />\n      {/* <Button onClick={recommentFormOpen}>답글</Button>\n      {recommentOpen && <RecommentForm comment={comment} />} */}\n    </>\n  );\n};\n\nRecomment.propTypes = {\n  comment: PropTypes.any.isRequired,\n};\n\nexport default Recomment;\n"]},"metadata":{},"sourceType":"module"}