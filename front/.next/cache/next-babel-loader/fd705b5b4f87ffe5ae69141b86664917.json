{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/minuk/Desktop/React-TradeMarket/front/components/LoginModal.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { Input, Button, Modal } from 'antd';\nimport 'antd/dist/antd.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport useInput from '../hooks/useInput';\nimport { LOG_IN_REQUEST } from '../reducers/user';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar LoginModal = function LoginModal() {\n  _s();\n\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      logInLoading = _useSelector.logInLoading,\n      logInError = _useSelector.logInError;\n\n  var _useInput = useInput(''),\n      _useInput2 = _slicedToArray(_useInput, 2),\n      email = _useInput2[0],\n      onChangeEmail = _useInput2[1];\n\n  var _useInput3 = useInput(''),\n      _useInput4 = _slicedToArray(_useInput3, 2),\n      password = _useInput4[0],\n      onChangePassword = _useInput4[1];\n\n  var _useState = useState(false),\n      loginModalVisible = _useState[0],\n      setLoginModalVisible = _useState[1];\n\n  var loginModal = function loginModal() {\n    setLoginModalVisible(true);\n  };\n\n  var loginCancel = function loginCancel() {\n    setLoginModalVisible(false);\n  };\n\n  useEffect(function () {\n    if (logInError) {\n      alert(logInError);\n    }\n  }, [logInError]);\n  var onSubmit = useCallback(function () {\n    dispatch({\n      type: LOG_IN_REQUEST,\n      data: {\n        email: email,\n        password: password\n      }\n    });\n  }, [email, password]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      type: \"primary\",\n      onClick: loginModal,\n      children: \"\\uB85C\\uADF8\\uC778\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Modal, {\n      visible: loginModalVisible,\n      onCancel: loginCancel,\n      onOk: onSubmit,\n      okText: \"\\uB85C\\uADF8\\uC778\",\n      cancelText: \"\\uCDE8\\uC18C\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uB85C\\uADF8\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"user-email\",\n            children: \"\\uC774\\uBA54\\uC77C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Input, {\n            name: \"user-email\",\n            type: \"email\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"user-password\",\n            children: \"\\uBE44\\uBC00\\uBC88\\uD638\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Input, {\n            name: \"user-password\",\n            type: \"password\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(LoginModal, \"6HNAjvs4po4HtuEg+XpKoYJi900=\", false, function () {\n  return [useDispatch, useSelector, useInput, useInput];\n});\n\n_c = LoginModal;\nexport default LoginModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginModal\");","map":{"version":3,"sources":["/Users/minuk/Desktop/React-TradeMarket/front/components/LoginModal.js"],"names":["React","useCallback","useEffect","useState","Input","Button","Modal","useDispatch","useSelector","useInput","LOG_IN_REQUEST","LoginModal","dispatch","state","user","logInLoading","logInError","email","onChangeEmail","password","onChangePassword","loginModalVisible","setLoginModalVisible","loginModal","loginCancel","alert","onSubmit","type","data"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\nimport { Input, Button, Modal } from 'antd';\nimport 'antd/dist/antd.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport useInput from '../hooks/useInput';\nimport { LOG_IN_REQUEST } from '../reducers/user';\n\nconst LoginModal = () => {\n  const dispatch = useDispatch();\n  const { logInLoading, logInError } = useSelector((state) => state.user);\n  const [email, onChangeEmail] = useInput('');\n  const [password, onChangePassword] = useInput('');\n\n  const [loginModalVisible, setLoginModalVisible] = useState(false);\n  const loginModal = () => {\n    setLoginModalVisible(true);\n  };\n  const loginCancel = () => {\n    setLoginModalVisible(false);\n  };\n\n  useEffect(() => {\n    if (logInError) {\n      alert(logInError);\n    }\n  }, [logInError]);\n\n  const onSubmit = useCallback(() => {\n    dispatch({\n      type: LOG_IN_REQUEST,\n      data: { email, password },\n    });\n  }, [email, password]);\n\n  return (\n    <>\n      <Button type=\"primary\" onClick={loginModal}>로그인</Button>\n      <Modal visible={loginModalVisible} onCancel={loginCancel} onOk={onSubmit} okText=\"로그인\" cancelText=\"취소\">\n        <h2>로그인</h2>\n        <div>\n          <div>\n            <label htmlFor=\"user-email\">이메일</label>\n            <br />\n            <Input name=\"user-email\" type=\"email\" required />\n          </div>\n          <div>\n            <label htmlFor=\"user-password\">비밀번호</label>\n            <br />\n            <Input name=\"user-password\" type=\"password\" required />\n          </div>\n        </div>\n      </Modal>\n    </>\n  );\n};\n\nexport default LoginModal;\n"]},"metadata":{},"sourceType":"module"}